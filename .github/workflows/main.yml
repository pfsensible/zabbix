name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
        ansible-version: ['2.11', '2.12', '2.13']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pip
        with:
          path: |
             ~/.cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-python-${{ matrix.python-version }}

      - name: Cache ansible setup
        uses: actions/cache@v2
        env:
          cache-name: cache-ansible
        with:
          path: |
             ~/work/ansible-pfsense/ansible-pfsense/ansible
          key: build-${{ env.cache-name }}-ansible-${{ matrix.ansible-version }}

      # Runs a set of commands using the runners shell
      - name: Install ansible and deps
        run: |
          pip install ansible-base dnspython parameterized pyyaml
          ansible-galaxy collection install community.internal_test_tools pfsensible.core

      - name: Run ansible tests
        run: |
          pwd
          dir=$(pwd)
          mkdir -p ~/.ansible/collections/ansible_collections/pfsensible
          cd ~/.ansible/collections/ansible_collections/pfsensible
          cp -al $dir zabbix
          cd zabbix
          ansible-test sanity --requirements --python ${{ matrix.python-version }}
          ansible-test units --requirements --python ${{ matrix.python-version }}
